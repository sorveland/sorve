name: Build and Publish Release Artifacts

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: setup-qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export images
        id: build
        run: |
          temp_dir=$(mktemp -d)
          
          # Use platforms output from setup-qemu and remove 'linux/' prefix
          platforms="${{ steps.setup-qemu.outputs.platforms }}"
          
          echo "Building Docker images for platforms: $platforms"
          for platform in $(echo $platforms | tr "," "\n"); do
            platform_short=$(echo $platform | sed 's/linux\///')
            echo "Building Docker image for platform $platform..."
            docker buildx build --platform $platform \
              -t sorveland/sorve:latest-$platform_short \
              --output type=local,dest=$temp_dir/images .

            image_dir=$temp_dir/images
            echo "Processing image for platform $platform..."

            if [ -d "$image_dir" ]; then
              # Copy binary to the working directory
              cp $image_dir/workspace/dist/sorve-linux ./sorve-$platform_short-linux

              # Add binaries to the release artifacts
              echo "Adding $platform_short binary to release"
              gh release upload ${{ github.event.release.tag_name }} sorve-$platform_short-linux --clobber || true
            else
              echo "Image directory for platform $platform does not exist"
            fi
          done
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Clean up
        run: |
          rm -rf $temp_dir
